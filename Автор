package TailAndQueue;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;


class Book implements Comparable<Book> {
	
    int sNumber;
    String title;
    String aName;
    double uPrice;
    int quantity;

    public Book(int sNumber, String title, String aName, double uPrice, int quantity) {
        this.sNumber = sNumber;
        this.title = title;
        this.aName = aName;
        this.uPrice = uPrice;
        this.quantity = quantity;
    }

    public double getTotalPrice() {
        return uPrice * quantity;
    }

    public String toString() {
        return sNumber + " " + title + " " + aName + " " + 
               uPrice + " " + quantity + " " + getTotalPrice();
    }

    public int compareTo(Book o1) {
        double razlika = o1.getTotalPrice() - this.getTotalPrice();
        if (razlika != 0) {
            return (int) razlika;
        } else {
            return this.sNumber - o1.sNumber;
        }
    }
}
public class LibrarySys {
	public static void main(String[] args) {
	        Scanner sc = new Scanner(System.in);
	        int N = sc.nextInt();
	        if (N < 3 && N > 5000) {
	            System.out.println("Грешка: Броят на книгите трябва да бъде между 3 и 5000!");
	           }
	        else 
	        {
	        ArrayList<Book> books = new ArrayList<>();
	        for (int i = 0; i < N; i++) {
	            System.out.println("Въведете информация за книга " + (i + 1) + ":");
	            System.out.print("Сигнатурен номер: ");
	            int sNumber = sc.nextInt();
	            sc.nextLine();
	            System.out.print("Заглавие: ");
	            String title = sc.nextLine();
	            System.out.println("Име на автора: ");
	            String aName = sc.nextLine();
	            System.out.println("Единична цена: ");
	            double uPrice = sc.nextDouble();
	            System.out.println("Брой закупени екземпляри: ");
	            int quantity = sc.nextInt();
	            books.add(new Book(sNumber, title, aName, uPrice, quantity));
	        }

	     System.out.println("Списък на всички книги в библиотеката, подредени по сигнатурен номер:");
	     for (int i = 0; i < books.size() - 1; i++) {
	         for (int j = 0; j < books.size() - i - 1; j++) {
	             if (books.get(j).sNumber > books.get(j + 1).sNumber) {
	                 Book temp = books.get(j);
	                 books.set(j, books.get(j + 1));
	                 books.set(j + 1, temp);}}}
	     for (Book book : books) {
	         System.out.println(book);
	     }

	        System.out.println("Списък на книгите, подредени в низходящ ред на "
	        		+ "общата сума заплатена за всички екземпляри:");
	        Collections.sort(books);
	        for (Book book : books) {
	            System.out.println(book);
	        }

	 
	        double totalUnitPrice = 0;
	        for (Book book : books) {
	            totalUnitPrice += book.uPrice;
	        }
	        double averageUnitPrice = totalUnitPrice / N;
	        System.out.println("Средно аритметична единична цена на книгите: " + String.format("%.2f", averageUnitPrice));

	     
	        
	        ArrayList<String> Authors = new ArrayList<>();
	        for (int i = 0; i < books.size(); i++) {
	            Book CBook = books.get(i);
	            if (CBook.uPrice > averageUnitPrice) {
	                String CAuthor = CBook.aName;
	                boolean vechedobavena = false;
	                for (int j = 0; j < i; j++) {
	                    if (books.get(j).aName.equals(CAuthor)) {
	                        vechedobavena = true;
	                        break;}}
	                if (!vechedobavena) {
	                    int bookCount = 1;
	                    for (int k = i + 1; k < books.size(); k++) {
	                        if (books.get(k).aName.equals(CAuthor) && books.get(k).uPrice > averageUnitPrice) {
	                            bookCount++;}}
	                    if (bookCount >= 3) {
	                       Authors.add(CAuthor);}}}}

	        System.out.println("Списък на всички автори, които имат поне три книги с единични цени по-големи от средно-аритметичната единична цена:");
	        for (String author : Authors) {
	            System.out.println(author);
	        }
	     }
	 }
}
